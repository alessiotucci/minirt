!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/nfs/homes/atucci/Desktop/mioGithubMiniRT/vector/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
add	vector_operations.c	/^t_vector	add(t_vector v1, t_vector v2)$/;"	f	typeref:typename:t_vector
create_point	utils_vectors.c	/^t_vector	create_point(double x, double y, double z)$/;"	f	typeref:typename:t_vector
create_vector	utils_vectors.c	/^t_vector	create_vector(double x, double y, double z)$/;"	f	typeref:typename:t_vector
division	vector_operations.c	/^t_vector	division(t_vector v, double scalar)$/;"	f	typeref:typename:t_vector
is_a_point	utils_vectors.c	/^int	is_a_point(t_vector vect)$/;"	f	typeref:typename:int
is_a_vector	utils_vectors.c	/^int	is_a_vector(t_vector vect)$/;"	f	typeref:typename:int
multiplication	vector_operations.c	/^t_vector	multiplication(t_vector v, double scalar)$/;"	f	typeref:typename:t_vector
negate	utils_vectors.c	/^t_vector	negate(t_vector vect)$/;"	f	typeref:typename:t_vector
normalization	complex_operations.c	/^t_vector	normalization(t_vector vector)$/;"	f	typeref:typename:t_vector
subtract	vector_operations.c	/^t_vector	subtract(t_vector v1, t_vector v2)$/;"	f	typeref:typename:t_vector
